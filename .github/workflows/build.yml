name: build apk
on:
  workflow_dispatch:
  schedule:
    - cron: '00 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release info (allow first run)
        id: getLatest
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        continue-on-error: true

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y jq

      - name: Get latest Ironfox release version
        run: |
          echo "BUILD_VERSION=$(curl -s https://fdroid.ironfoxoss.org/fdroid/repo/index-v1.json | jq -r '.packages.\"org.ironfoxoss.ironfox\"[0].versionName')" >> $GITHUB_ENV

      - name: Check if latest version was already built
        if: false
        run: |
          echo latest version already built and released
          exit -1

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y wget apktool zipalign apksigner

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Run build script and sign apk
        run: |
          chmod +x ./build.sh
          ./build.sh
          echo "${{ secrets.KEYSTORE }}" | base64 -di > keystore.jks
          apksigner sign --ks keystore.jks --ks-pass pass:${{ secrets.KEYSTORE_PASSPHRASE }} patched_signed.apk

      - name: Get release notes
        run: |
          echo 'RELEASE_NOTES<<EOF' >> $GITHUB_ENV
          curl -s https://gitlab.com/api/v4/projects/ironfox-oss%2FIronFox/releases/v$BUILD_VERSION \
            | jq -r .description \
            | sed '/## Checksums/,/This release was automatically generated/d' \
            >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.BUILD_VERSION }}
          files: ${{ github.workspace }}/patched_signed.apk
          body: ${{ env.RELEASE_NOTES }}
